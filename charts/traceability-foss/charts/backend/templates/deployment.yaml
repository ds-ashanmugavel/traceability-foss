#  Copyright (c) 2022, 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2022, 2023 ZF Friedrichshafen AG
#  Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0. *
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  name: {{ include "traceability-foss-backend.fullname" . }}
  labels:
    {{- include "traceability-foss-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "traceability-foss-backend.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: 2
  template:
    metadata:
      namespace: {{ .Values.namespace | default .Release.Namespace }}
      {{- with .Values.podAnnotations }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "traceability-foss-backend.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- if .Values.imagePullSecret.dockerconfigjson }}
      imagePullSecrets:
        - name: {{ include "traceability-foss-backend.fullname" . }}-imagepullsecret
      {{- else }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "traceability-foss-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.dependencies.enabled }}
      initContainers:
        - name: wait-for-edc-controlplane
          image: appropriate/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://{{ tpl (.Values.dependencies.edc | default "") . }}-controlplane:8080/api/check/liveness; do echo waiting for other pod; sleep 2; done;' ]
        - name: wait-for-irs
          image: appropriate/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://{{ tpl (.Values.dependencies.irs | default "") . }}:8080/actuator/health/liveness; do echo waiting for other pod; sleep 2; done;' ]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springprofile | quote }}
            - name: TRACEABILITY_BPN
              value: {{ .Values.traceability.bpn | quote }}
            - name: TRACEABILITY_URL
              value: {{ .Values.traceability.url | quote }}
            - name: TRACEABILITY_URL_INTERNAL
              value: {{ .Values.traceability.internalUrl | quote }}
            - name: TRACEABILITY_LEFT_OPERAND
              value: {{ .Values.traceability.leftOperand | quote }}
            - name: TRACEABILITY_OPERATOR_TYPE
              value: {{ .Values.traceability.operatorType | quote }}
            - name: TRACEABILITY_RIGHT_OPERAND
              value: {{ .Values.traceability.rightOperand | quote }}
            - name: TRACEABILITY_LEFT_OPERAND_SECOND
              value: {{ .Values.traceability.leftOperandSecond | quote }}
            - name: TRACEABILITY_OPERATOR_TYPE_SECOND
              value: {{ .Values.traceability.operatorTypeSecond | quote }}
            - name: TRACEABILITY_RIGHT_OPERAND_SECOND
              value: {{ .Values.traceability.rightOperandSecond | quote }}
            - name: TRACEABILITY_VALID_UNTIL
              value: {{ .Values.traceability.validUntil | quote }}
            - name: OAUTH2_CLIENT_ID
              value: {{ .Values.oauth2.clientId | quote }}
            - name: OAUTH2_CLIENT_SECRET
              value: {{ .Values.oauth2.clientSecret | quote }}
            - name: OAUTH2_CLIENT_SCOPE
              value: {{ .Values.oauth2.clientScope | quote }}
            - name: OAUTH2_PROVIDER_TOKEN_URI
              value: {{ .Values.oauth2.clientTokenUri | quote }}
            - name: OAUTH2_JWK_SET_URI
              value: {{ .Values.oauth2.jwkSetUri | quote }}
            - name: EDC_API_KEY
              value: {{ .Values.edc.apiKey | quote }}
            - name: EDC_PROVIDER_URL
              value: {{ .Values.edc.providerUrl | quote }}
            - name: EDC_PROVIDER_DATAPLANE_URL
              value: {{ .Values.edc.providerDataplaneUrl | quote }}
            - name: REGISTRY_URL_WITH_PATH
              value: {{ .Values.registry.urlWithPath | quote }}
            - name: REGISTRY_ALLOWED_BPNS
              value: {{ .Values.registry.allowedBpns | quote }}
            - name: SUBMODEL_URL
              value: {{ .Values.submodel.baseUrl | quote }}
            - name: IRS_URL
              value: {{ .Values.irs.baseUrl | quote }}
            - name: PORTAL_URL
              value: {{ .Values.portal.baseUrl | quote }}
            - name: EDC_CALLBACK_URL
              value: {{ .Values.edc.callbackUrl | quote }}
            - name: EDC_CALLBACK_URL_EDC_CLIENT
              value: {{ .Values.edc.callbackUrlEdcClient | quote }}
            - name: ALLOWED_CORS_ORIGIN_FIRST
              value: {{ .Values.config.allowedCorsOriginFirst | quote }}
            - name: ALLOWED_CORS_ORIGIN_SECOND
              value: {{ .Values.config.allowedCorsOriginSecond | quote }}
            - name: EDC_DATA_ENDPOINT_URL
              value: {{ .Values.edc.dataEndpointUrl | quote }}
            - name: TRUSTED_PORT
              value: {{ .Values.config.trustedPort | quote }}
            - name: DISCOVERY_FINDER_URL_WITH_PATH
              value: {{ .Values.discoveryfinder.baseUrl | quote }}
            - name: JWT_RESOURCE_CLIENT
              value: {{ .Values.oauth2.resourceClient | quote }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.datasource.url | quote }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.datasource.username | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.datasource.password | quote }}
            - name: IRS_ADMIN_API_KEY
              value: {{ .Values.irsAdminApiKey | quote }}
            - name: IRS_REGULAR_API_KEY
              value: {{ .Values.irsRegularApiKey | quote }}
            - name: JAVA_TOOL_OPTIONS
              value: {{ .Values.javaToolOptions | default "" | quote }}
            - name: BPDM_URL
              value: {{ .Values.bpdm.url | quote }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
            - name: http-trusted
              containerPort: 8181
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
        {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
