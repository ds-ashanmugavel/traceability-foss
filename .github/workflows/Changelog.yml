name: "Changelog Generator"

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Check for existing PR comment
        id: check-comment
        run: |
            COMMENTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments")

            if echo "$COMMENTS" | grep -q "ðŸŽ‰ Changelog Updated!"; then
              echo "Changelog comment already exists. Skipping workflow."
              exit 0
            else
              echo "No existing changelog comment found. Continuing workflow."
            fi

      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: "Get OpenAI Input File"
        id: get_diff
        shell: bash
        run: |-

            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_BODY="${{ github.event.pull_request.body }}"
            BASE_REF="${{ github.event.pull_request.base.ref }}"
            HEAD_REF="${{ github.event.pull_request.head.ref }}"

            git fetch origin "$HEAD_REF:$HEAD_REF"
            git checkout "$HEAD_REF"
            git fetch origin "$BASE_REF:$BASE_REF"
            git diff "origin/$BASE_REF" > "raw_diff.txt"


            echo "Pull Request Title: $PR_TITLE" > "Input.txt"
            echo "" >> "Input.txt"
            echo "Pull Request Description:" >> "Input.txt"
            echo "$PR_BODY" >> "Input.txt"
            echo "" >> "Input.txt"
            echo "Diff:" >> "Input.txt"
            cat "raw_diff.txt" >> "Input.txt"
            rm raw_diff.txt

            echo "INPUT_FILE=Input.txt" >> $GITHUB_ENV

      - name: Upload diff file
        uses: actions/upload-artifact@v4
        with:
          name: "INPUT_FILE"
          path: ${{ env.INPUT_FILE }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'


      - name: Send Request to OpenAI
        run: |
          python -m pip install openai
          python -m pip install requests
          INPUT_FILE="${{ env.INPUT_FILE }}"
          PROMPT="You are tasked with creating a concise and strictly formatted changelog entry based on the input file, which contains Git diffs, Pull Request (PR) titles, and descriptions; the changelog entry must adhere to the format 'Category: #XXXX Brief description,' where 'Category' is replaced with 'Added,' 'Changed,' or 'Removed' based on the nature of the change inferred primarily from the Git diff while using the PR title and description only for supplementary context, and the issue number is extracted from the PR title (format: #XXXX) or replaced with #XXXX as a placeholder if absent; the entire entry must not exceed 15 words, with a strict focus on the Git diff content to ensure precision, structure, and alignment with these rules."
          RESPONSE=$(python ./.github/OpenAi/OpenAi_File.py "${{ secrets.OPENAPIKEY }}" "$INPUT_FILE" "$PROMPT")

          # Save the response for later steps
          echo "response=$RESPONSE" >> $GITHUB_ENV
          sleep 60

      - name: Use OpenAI Response
        if: always()
        run: |
          echo "Response from OpenAI: ${{ env.response }}"

      - name: Update Changelog
        if: always()
        run: |
          rm ${{ env.INPUT_FILE }}
          python ./.github/changelog/Changelog.py "${{ env.response }}" "./CHANGELOG.md"
          git add CHANGELOG.md
          git commit -m "Update changelog"
          git push origin "${{ github.event.pull_request.head.ref }}"

      - name: Add PR comment
        uses: mshick/add-pr-comment@v2
        if: success()
        with:
          message: |
            ## ðŸŽ‰ Changelog Updated!
            The changelog has been successfully updated.
