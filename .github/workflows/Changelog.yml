name: "Changelog Generator"

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: "Get OpenAI Input File"
        id: get_diff
        shell: bash
        run: |-

            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_BODY="${{ github.event.pull_request.body }}"
            BASE_REF="${{ github.event.pull_request.base.ref }}"
            HEAD_REF="${{ github.event.pull_request.head.ref }}"

            git fetch origin "$HEAD_REF:$HEAD_REF"
            git checkout "$HEAD_REF"
            git fetch origin "$BASE_REF:$BASE_REF"
            git diff "origin/$BASE_REF" > "raw_diff.txt"


            echo "Pull Request Title: $PR_TITLE" > "Input.txt"
            echo "" >> "Input.txt"
            echo "Pull Request Description:" >> "Input.txt"
            echo "$PR_BODY" >> "Input.txt"
            echo "" >> "Input.txt"
            echo "Diff:" >> "Input.txt"
            cat "raw_diff.txt" >> "Input.txt"
            rm raw_diff.txt

            echo "INPUT_FILE=Input.txt" >> $GITHUB_ENV

      - name: Upload diff file
        uses: actions/upload-artifact@v4
        with:
          name: "INPUT_FILE"
          path: ${{ env.INPUT_FILE }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'


      - name: Send Request to OpenAI
        run: |

          python -m pip install requests
          INPUT_FILE="${{ env.INPUT_FILE }}"
          PROMPT="You are tasked with creating a concise changelog entry based on the provided input. The input contains Git diffs, Pull Request titles, and descriptions, where PR titles include issue numbers in the format #XXX. Create a single well-structured changelog line as a string with a total of no more than 15 words. Use the following format Category: #XXX Brief description.- Replace 'Category' with 'Added', 'Changed', or 'Removed' based on the nature of the change.- Extract the issue number from the PR title (format: #XXX) If there is no Number in the PR title then use XXXX.- Summarize the change in as few words as possible to keep the total under 15 words."
          RESPONSE=$(python ./.github/OpenAi/OpenAi_File.py "${{ secrets.OPENAPIKEY }}" "$INPUT_FILE" "$PROMPT")

          # Save the response for later steps
          echo "response=$RESPONSE" >> $GITHUB_ENV
          echo "::set-output name=openai_response::$RESPONSE"

      - name: Use OpenAI Response
        run: |
          echo "Response from OpenAI: ${{ env.response }}"



      - name: Update Changelog
        run: |

          python ./.github/changelog/Changelog.py "${{ env.response }}" "./CHANGELOG.md"
          git add CHANGELOG.md
          git commit -m "Update changelog"
          git push origin "${{ github.event.pull_request.head.ref }}"
